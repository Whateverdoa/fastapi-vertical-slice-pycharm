[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fastapi-vertical-slice-pycharm"
version = "0.1.0"
description = "FastAPI Vertical Slice Architecture Template - PyCharm Edition"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
readme = "README-PyCharm.md"
license = {text = "MIT"}
requires-python = ">=3.11"

dependencies = [
    # FastAPI and ASGI
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    
    # Database
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
    "asyncpg>=0.29.0",  # PostgreSQL async driver
    
    # Validation and serialization
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # HTTP client
    "httpx>=0.25.2",
    
    # Caching
    "redis>=5.0.1",
    
    # Authentication & Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",  # For form data
    
    # Utilities
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0",  # Structured logging
    "rich>=13.7.0",  # Beautiful console output
    
    # Background tasks
    "celery>=5.3.4",
    "flower>=2.0.1",  # Celery monitoring
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "factory-boy>=3.3.0",  # Test factories
    "freezegun>=1.2.2",  # Time mocking
    
    # Code quality
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.6.0",
    
    # Development tools
    "watchfiles>=0.21.0",  # File watching
    "ipython>=8.17.2",  # Enhanced REPL
    "ipdb>=0.13.13",  # Debugging
]

prod = [
    # Production server
    "gunicorn>=21.2.0",
    
    # Monitoring
    "sentry-sdk[fastapi]>=1.38.0",
    "prometheus-client>=0.19.0",
    
    # Performance
    "orjson>=3.9.10",  # Fast JSON
]

docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.8",
    "mkdocs-swagger-ui-tag>=0.6.8",
]

[project.scripts]
dev = "scripts.dev:main"
migrate = "scripts.migrate:main"
format = "scripts.format:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "flower.*",
    "redis.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=90",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg",
    "migrations",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]  # Skip assert_used and shell injection in tests 